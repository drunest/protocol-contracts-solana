name: coverage
permissions:
  contents: read
on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**.ts"
  pull_request:
    paths-ignore:
      - "**.ts"
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
jobs:
    required:
        runs-on: ubuntu-latest
        name: ubuntu / ${{ matrix.toolchain }}
        strategy:
            matrix:
              # Run on stable and beta to ensure that tests won't break on the next
              # version of the rust toolchain.
              toolchain: [ stable, beta ]
    coverage:
        runs-on: ubuntu-latest
        name: ubuntu / stable / coverage
        steps:
        - uses: actions/checkout@v4
          with:
            submodules: true
        - name: Install stable
          uses: dtolnay/rust-toolchain@stable
          with:
            components: llvm-tools-preview
        - name: cargo install cargo-llvm-cov
          uses: taiki-e/install-action@cargo-llvm-cov
        - name: cargo generate-lockfile
          if: hashFiles('Cargo.lock') == ''
          run: cargo generate-lockfile
        - name: cargo llvm-cov
            # FIXME: Include e2e tests in coverage.
          run: cargo llvm-cov --locked --features std --lcov --output-path lcov.info
        - name: Record Rust version
          run: echo "RUST=$(rustc --version)" >> "$GITHUB_ENV"
        - name: Upload to codecov.io
          uses: codecov/codecov-action@v4
          with:
            fail_ci_if_error: true
            token: ${{ secrets.CODECOV_TOKEN }}
            env_vars: OS,RUST
